# Start with random samples
        # No random sampling
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random query!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure random_query --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + least_confident!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure least_confident --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + most_confident!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure most_confident --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + entropy!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure entropy --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + core set before fc
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature before_fc --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + core set after fc
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature after_fc --wd 5e-4 ;
            


            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + random query!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure random_query --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + least_confident!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure least_confident --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + most_confident!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure most_confident --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + entropy!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure entropy --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + core set before fc
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature before_fc --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + core set before fc + lower learning rate
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.05 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature before_fc --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + core set after fc
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature after_fc --wd 5e-4 ;
        
        # Random sampling 10K (TODO all)
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random query!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure random_query --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random query! + lower lr
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.05 --lr_decay_step 160 --epochs 200 --uncertainty_measure random_query --wd 5e-4 ;
            # CIFAR10 + Softmax Uncert
            ainty Threshold 0.00 + least_confident!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure least_confident --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + most_confident!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure most_confident --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + entropy!
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure entropy --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + core set before fc
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature before_fc --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + core set after fc
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature after_fc --wd 5e-4 ;
            


            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + random query!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure random_query --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + least_confident!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure least_confident --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + most_confident!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure most_confident --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + entropy!
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure entropy --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + core set before fc
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature before_fc --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + core set after fc
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --label_picker coreset_measure --coreset_measure k_center_greedy --coreset_feature after_fc --wd 5e-4 ;
            
            # # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-120]
            # python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;
            # # CIFAR10 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-120]
            # python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;
            # # CIFAR100 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-120]
            # python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;
            # # CIFAR100 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-120]
            # python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;

            # # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-0]
            # python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;
            # # CIFAR10 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-0]
            # python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;
            # # CIFAR100 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-0]
            # python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;
            # # CIFAR100 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-0]
            # python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure highest_loss --wd 5e-4 ;

            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-0]
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-0]
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-120]
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-120]
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.05 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-120]
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-120] + MSE
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode mse --learning_loss_lambda 0.1 --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-120] + MSE
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode mse --learning_loss_lambda 0.1 --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.001 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR10 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-120] + MSE
            python train.py CIFAR10  --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode mse --learning_loss_lambda 0.1 --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            

            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-0]
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-0]
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 0 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + random_sampling 10K + prop epoch [0-120]
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling fixed_10K --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;
            # CIFAR100 + Softmax Uncertainty Threshold 0.00 + No random_sampling + prop epoch [0-120]
            python train.py CIFAR100 --save_ckpt False --verbose True --init_mode learning_loss_start_random --learning_loss_stop_epoch 120 --data_path ./data --trainer network_learning_loss --learning_loss_train_mode default --max_rounds 10 --budget 1000 --batch 128 --network_eval_threshold 0.00 --active_random_sampling none  --arch ResNet18 --lr 0.1 --lr_decay_step 160 --epochs 200 --uncertainty_measure lowest_loss --wd 5e-4 ;

            
